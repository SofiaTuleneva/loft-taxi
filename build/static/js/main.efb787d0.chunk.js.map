{"version":3,"sources":["img/logo-white.svg","img/logo.svg","constants/Paths.js","PrivateRoute.js","components/Shared/Logo.js","components/Shared/AuthWrapper.js","modules/auth/actions.js","modules/auth/types.js","components/Login/LoginForm.js","components/Login/index.js","components/Login/Login.js","components/Header/HeaderLogo.js","components/Header/HeaderNav.js","components/Header/index.js","components/Header/Header.js","modules/map/actions.js","modules/map/types.js","components/Map/OrderForm.js","components/Map/OrderPanel.js","components/Map/index.js","components/Map/Map.js","constants/Tokens.js","components/Map/DrawRoute.js","modules/profile/actions.js","modules/profile/types.js","components/Profile/ProfileForm.js","components/Profile/index.js","components/Profile/Profile.js","components/Signup/SignupForm.js","components/Signup/index.js","components/Signup/Signup.js","modules/profile/reducers.js","modules/map/reducers.js","App.js","serviceWorker.js","modules/sagas.js","modules/auth/reducers.js","modules/index.js","LocalStorage.js","store.js","index.js"],"names":["module","exports","paths","PrivateRoute","Component","component","rest","isLoggedIn","useSelector","state","auth","render","props","to","Logo","className","src","LogoIcon","width","alt","AuthWrapper","children","fetchLoginRequest","createAction","fetchLoginSuccess","fetchLoginFailure","logoutAction","fetchSignupRequest","fetchSignupSuccess","fetchSignupFailure","LoginForm","dispatch","useDispatch","useState","email","password","data","setData","handleChange","target","name","value","onSubmit","e","preventDefault","FormControl","fullWidth","InputLabel","htmlFor","Input","id","placeholder","type","onChange","inputProps","required","Button","disabled","pending","data-testid","variant","color","error","Login","HeaderLogo","HeaderIcon","HeaderNav","href","onClick","Header","fetchAddressRequest","fetchAddressSuccess","fetchAddressFailure","fetchRouteRequest","fetchRouteSuccess","fetchRouteFailure","clearOrder","OrderForm","addresses","map","addressOne","setAddressOne","addressTwo","setAddressTwo","orderIsReady","setOrderIsReady","filteredOptions","option","label","filter","includes","handleChangeAddressOne","useCallback","handleChangeAddressTwo","handleClearOrder","status","coordinates","action","method","options","isClearable","isSearchable","OrderPanel","console","log","profile","history","useHistory","push","Map","mapRef","useRef","mapboxgl","accessToken","route","useEffect","container","current","style","center","zoom","on","flyTo","addLayer","source","properties","geometry","layout","paint","drawRoute","ref","fetchProfileRequest","fetchProfileGet","fetchProfileSuccess","fetchProfileFailure","ProfileForm","cardNumber","expiryDate","cardName","cvc","token","defaultValue","Profile","SignupForm","surname","TextField","Signup","handleActions","payload","combineReducers","App","ThemeProvider","theme","exact","path","Boolean","window","location","hostname","match","loginSaga","signupSaga","profileRequestSaga","profileGetSaga","addressesGetSaga","routeRequestSaga","rootSagas","PATH","loginRequest","fetch","headers","body","JSON","stringify","then","response","json","signupRequest","profileRequest","profileGet","addressListGet","routeRequest","take","call","result","success","put","Object","assign","takeEvery","fork","storage","localStorage","sagaMiddleware","createSagaMiddleWare","initialState","savedState","getItem","parse","getStateFromStorage","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","noop","run","subscribe","toStorage","setItem","saveStorage","getState","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efb787d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.28243ec7.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.51b4041b.svg\";","export const paths = {\n\tlogin: '/login',\n\tsignup: '/signup',\n\tmap: '/map',\n\tprofile: '/profile',\n};","import React from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {paths} from './constants/Paths';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n\n\tconst isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n\treturn <Route\n\t\t{...rest}\n\t\trender={props =>\n\t\t\tisLoggedIn ? <Component {...props} /> : <Redirect to={paths.login}/>\n\t\t}\n\t/>\n};\n\nexport default PrivateRoute;","import React from 'react'\nimport LogoIcon from '../../img/logo-white.svg'\n\nconst Logo = () => {\n    return (\n        <div className=\"logo\">\n            <img src={LogoIcon} width=\"156\" alt=\"logo\" className=\"logo__icon\"/>\n        </div>\n    )\n};\n\nexport default Logo;","import React from 'react';\nimport Logo from \"../Shared/Logo\";\n\nconst AuthWrapper = ({children}) => {\n\treturn (\n\t\t<div className=\"login\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"login__content\">\n\t\t\t\t\t<div className=\"content__part\">\n\t\t\t\t\t\t<Logo/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"content__part\">\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AuthWrapper;\n","import {createAction} from 'redux-actions';\nimport {\n\tLOGIN_REQUEST,\n\tLOGIN_SUCCESS,\n\tLOGIN_FAILURE,\n\tLOGIN_LOGOUT,\n\n\tSIGNUP_REQUEST,\n\tSIGNUP_SUCCESS,\n\tSIGNUP_FAILURE,\n} from './types';\n\nexport const fetchLoginRequest = createAction(LOGIN_REQUEST);\nexport const fetchLoginSuccess = createAction(LOGIN_SUCCESS);\nexport const fetchLoginFailure = createAction(LOGIN_FAILURE);\nexport const logoutAction = createAction(LOGIN_LOGOUT);\n\nexport const fetchSignupRequest = createAction(SIGNUP_REQUEST);\nexport const fetchSignupSuccess = createAction(SIGNUP_SUCCESS);\nexport const fetchSignupFailure = createAction(SIGNUP_FAILURE);","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGIN_LOGOUT = 'LOGIN_LOGOUT';\n\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';","import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {fetchLoginRequest} from '../../modules/auth/actions';\nimport {Link} from 'react-router-dom';\nimport {paths} from '../../constants/Paths';\n\nimport {\n\tButton,\n\tFormControl,\n\tInputLabel,\n\tInput\n} from '@material-ui/core';\n\nconst LoginForm = () => {\n\n\tconst state = useSelector(state => state.auth);\n\tconst dispatch = useDispatch();\n\n\tconst [data, setData] = useState({email: '', password: ''});\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tdispatch(fetchLoginRequest({\n\t\t\temail: data.email,\n\t\t\tpassword: data.password,\n\t\t}));\n\t};\n\n\tconst handleChange = ({target}) => {\n\t\tsetData({\n\t\t\t...data,\n\t\t\t[target.name]: target.value,\n\t\t})\n\t};\n\n\treturn state.isLoggedIn ? <Redirect to={paths.map}/> : (\n\t\t<>\n\t\t\t<form onSubmit={handleSubmit} className=\"login__form\">\n\t\t\t\t<h1 className=\"form__title\">Войти</h1>\n\t\t\t\t<div className=\"form__subtitle\">\n\t\t\t\t\tНовый пользователь? <Link to={paths.signup}>Зарегистрируйтесь</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input__group\">\n\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t<InputLabel htmlFor=\"email\">Email:</InputLabel>\n\t\t\t\t\t\t<Input id=\"email\"\n\t\t\t\t\t\t\t   placeholder=\"Логин\"\n\t\t\t\t\t\t\t   type=\"text\"\n\t\t\t\t\t\t\t   name=\"email\"\n\t\t\t\t\t\t\t   value={data.email}\n\t\t\t\t\t\t\t   onChange={handleChange}\n\t\t\t\t\t\t\t   inputProps={{'data-testid': 'login-field'}}\n\t\t\t\t\t\t\t   required\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"input__group\">\n\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t<InputLabel htmlFor=\"password\">Password:</InputLabel>\n\t\t\t\t\t\t<Input id=\"password\"\n\t\t\t\t\t\t\t   placeholder=\"Пароль\"\n\t\t\t\t\t\t\t   type=\"password\"\n\t\t\t\t\t\t\t   name=\"password\"\n\t\t\t\t\t\t\t   value={data.password}\n\t\t\t\t\t\t\t   onChange={handleChange}\n\t\t\t\t\t\t\t   inputProps={{'data-testid': 'password-field'}}\n\t\t\t\t\t\t\t   required\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button__group\">\n\t\t\t\t\t<Button type=\"submit\" disabled={state.pending} data-testid=\"submit-button\" variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\tВойти\n\t\t\t\t\t</Button>\n\t\t\t\t\t<div className=\"pending\">\n\t\t\t\t\t\t{state.pending ? ' Загрузка...' : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t{state.error ? <div data-testid={'error-message'} className=\"error\">\n\t\t\t\t\t\t{state.error?.error}\n\t\t\t\t\t</div> : ''}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n\nexport default LoginForm;","import Login from './Login';\nexport default Login;","import React from 'react';\nimport AuthWrapper from '../Shared/AuthWrapper';\nimport LoginForm from './LoginForm';\n\nconst Login = () => {\n\treturn (\n\t\t<AuthWrapper>\n\t\t\t<LoginForm/>\n\t\t</AuthWrapper>\n\t);\n};\n\nexport default Login;","import React from 'react'\nimport HeaderIcon from '../../img/logo.svg'\n\nconst HeaderLogo = () => {\n    return (\n        <div className=\"header__logo\">\n            <img src={HeaderIcon} width=\"156\" alt=\"logo\" className=\"header__pic\"/>\n        </div>\n    )\n};\n\nexport default HeaderLogo;","import React from 'react';\nimport {logoutAction} from \"../../modules/auth/actions\";\nimport {useDispatch} from \"react-redux\";\nimport {Link} from 'react-router-dom';\nimport {paths} from '../../constants/Paths';\n\nconst HeaderNav = () => {\n\n\tconst dispatch = useDispatch();\n\n\tconst handleLogout = e => {\n\t\te.preventDefault();\n\t\tdispatch(logoutAction());\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ul className=\"header__menu\">\n\t\t\t\t<li className=\"menu__item\"><Link to={paths.map}>Карта</Link></li>\n\t\t\t\t<li className=\"menu__item\"><Link to={paths.profile}>Профиль</Link></li>\n\t\t\t\t<li className=\"menu__item\"><a href=\"/\" onClick={handleLogout}>Выйти</a></li>\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nexport default HeaderNav;","import Header from './Header';\nexport default Header;","import React from 'react';\nimport HeaderLogo from \"./HeaderLogo\";\nimport HeaderNav from \"./HeaderNav\";\n\nconst Header = () => {\n\treturn (\n\t\t<header className=\"header\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"header__line\">\n\t\t\t\t\t<HeaderLogo/>\n\t\t\t\t\t<HeaderNav/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import {createAction} from 'redux-actions';\nimport {\n\tFETCH_ADDRESS_REQUEST,\n\tFETCH_ADDRESS_SUCCESS,\n\tFETCH_ADDRESS_FAILURE,\n\tFETCH_ROUTE_REQUEST,\n\tFETCH_ROUTE_SUCCESS,\n\tFETCH_ROUTE_FAILURE,\n\tCLEAR_ORDER,\n} from './types';\n\nexport const fetchAddressRequest = createAction(FETCH_ADDRESS_REQUEST);\nexport const fetchAddressSuccess = createAction(FETCH_ADDRESS_SUCCESS);\nexport const fetchAddressFailure = createAction(FETCH_ADDRESS_FAILURE);\n\nexport const fetchRouteRequest = createAction(FETCH_ROUTE_REQUEST);\nexport const fetchRouteSuccess = createAction(FETCH_ROUTE_SUCCESS);\nexport const fetchRouteFailure = createAction(FETCH_ROUTE_FAILURE);\n\nexport const clearOrder = createAction(CLEAR_ORDER);","export const FETCH_ADDRESS_REQUEST = 'FETCH_ADDRESS_REQUEST';\nexport const FETCH_ADDRESS_SUCCESS = 'FETCH_ADDRESS_SUCCESS';\nexport const FETCH_ADDRESS_FAILURE = 'FETCH_ADDRESS_FAILURE';\n\nexport const FETCH_ROUTE_REQUEST = \"FETCH_ROUTE_REQUEST\";\nexport const FETCH_ROUTE_SUCCESS = \"FETCH_ROUTE_SUCCESS\";\nexport const FETCH_ROUTE_FAILURE = \"FETCH_ROUTE_FAILURE\";\n\nexport const CLEAR_ORDER = `CLEAR_ORDER`;","import React, {useState, useCallback} from \"react\";\nimport Select from \"react-select\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {fetchRouteRequest, clearOrder} from \"../../modules/map/actions\";\n\nconst OrderForm = () => {\n\tconst dispatch = useDispatch();\n\tconst addresses = useSelector(state => state.map.addresses.addresses);\n\n\t// Local state\n\tconst [addressOne, setAddressOne] = useState(null);\n\tconst [addressTwo, setAddressTwo] = useState(null);\n\tconst [orderIsReady, setOrderIsReady] = useState(false);\n\n\t// Options\n\tconst options = addresses.map(option => ({value: option, label: option}));\n\tconst filteredOptions = options.filter(\n\t\toption => ![addressOne, addressTwo].includes(option.label)\n\t);\n\n\tconst handleChangeAddressOne = useCallback(\n\t\te => {\n\t\t\tconst value = e ? e.value : null;\n\t\t\tsetAddressOne(value);\n\t\t},\n\t\t[setAddressOne]\n\t);\n\n\tconst handleChangeAddressTwo = useCallback(\n\t\te => {\n\t\t\tconst value = e ? e.value : null;\n\t\t\tsetAddressTwo(value);\n\t\t},\n\t\t[setAddressTwo]\n\t);\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tdispatch(\n\t\t\tfetchRouteRequest({\n\t\t\t\taddressOne,\n\t\t\t\taddressTwo\n\t\t\t})\n\t\t);\n\t\tsetOrderIsReady(true);\n\t};\n\n\tconst handleClearOrder = useCallback(\n\t\te => {\n\t\t\tsetOrderIsReady(false);\n\t\t\tsetAddressOne(null);\n\t\t\tsetAddressTwo(null);\n\n\t\t\tdispatch(\n\t\t\t\tclearOrder({\n\t\t\t\t\tstatus: false,\n\t\t\t\t\tcoordinates: null,\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\t[setOrderIsReady, dispatch]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{orderIsReady ? (\n\t\t\t\t<>\n\t\t\t\t\t<h1>Заказ размещён</h1>\n\t\t\t\t\t<p className=\"panel__subtext\">\n\t\t\t\t\t\tВаше такси уже едет к вам. Прибудет приблизительно через 10 минут.\n\t\t\t\t\t</p>\n\t\t\t\t\t<button className=\"form__btn\" onClick={handleClearOrder}>\n\t\t\t\t\t\tСделать новый заказ\n\t\t\t\t\t</button>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<form action=\"/\" method=\"\" onSubmit={handleSubmit}>\n\t\t\t\t\t<div className=\"address__group\">\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\toptions={filteredOptions}\n\t\t\t\t\t\t\tonChange={handleChangeAddressOne}\n\t\t\t\t\t\t\tclassName=\"address__input\"\n\t\t\t\t\t\t\tplaceholder=\"Откуда\"\n\t\t\t\t\t\t\tisClearable\n\t\t\t\t\t\t\tisSearchable\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\toptions={filteredOptions}\n\t\t\t\t\t\t\tonChange={handleChangeAddressTwo}\n\t\t\t\t\t\t\tclassName=\"address__input\"\n\t\t\t\t\t\t\tplaceholder=\"Куда\"\n\t\t\t\t\t\t\tisClearable\n\t\t\t\t\t\t\tisSearchable\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\" className=\"form__btn\" disabled={!addressOne || !addressTwo}>\n\t\t\t\t\t\tВызвать такси\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default OrderForm;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {Link, useHistory} from 'react-router-dom';\nimport {paths} from \"../../constants/Paths\";\nimport OrderForm from \"./OrderForm\";\n\nconst OrderPanel = () => {\n\tconst state = useSelector(state => state);\n\tconsole.log(state.profile);\n\n\tconst history = useHistory();\n\n\tconst handleClick = () => {\n\t\thistory.push(paths.profile);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{state.profile.data ?\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"map__panel\">\n\t\t\t\t\t\t<OrderForm/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"map__panel\">\n\t\t\t\t\t\t<h1>Заполните платежные данные</h1>\n\t\t\t\t\t\t<p className=\"panel__subtext\">\n\t\t\t\t\t\t\tУкажите информацию о банковской карте, чтобы сделать\n\t\t\t\t\t\t\tзаказ.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<Link className=\"form__btn\" to={paths.profile} onClick={handleClick}>Перейти в\n\t\t\t\t\t\t\tпрофиль</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>\n\n\t);\n};\n\nexport default OrderPanel;","import Map from './Map';\nexport default Map;","import React, {useEffect, useRef} from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\nimport mapboxgl from \"mapbox-gl\";\nimport {mapboxToken} from \"../../constants/Tokens\";\nimport Header from '../Header';\nimport OrderPanel from \"./OrderPanel\";\nimport {drawRoute} from \"./DrawRoute\";\nimport {clearOrder} from \"../../modules/map/actions\";\n\n\nconst Map = () => {\n\tconst dispatch = useDispatch();\n\tconst mapRef = useRef();\n\tmapboxgl.accessToken = mapboxToken;\n\tconst route = useSelector(state => state.map.route);\n\n\tuseEffect(() => {\n\t\tdispatch(\n\t\t\tclearOrder({\n\t\t\t\tstatus: false,\n\t\t\t\tcoordinates: null,\n\t\t\t})\n\t\t);\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tconst map = new mapboxgl.Map({\n\t\t\tcontainer: mapRef.current,\n\t\t\tstyle: \"mapbox://styles/mapbox/light-v10\",\n\t\t\tcenter: [30.2656504, 59.8029126],\n\t\t\tzoom: 15\n\t\t});\n\n\t\tmap.on(\"load\", () => {\n\t\t\tif (route.status) drawRoute(map, route.coordinates);\n\t\t});\n\n\t}, [route]);\n\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<OrderPanel/>\n\t\t\t<div className=\"mapbox\" ref={mapRef}/>\n\t\t</>);\n};\n\nexport default Map;","export const mapboxToken =\n\t'pk.eyJ1Ijoic29maWF0dWxlbmV2YSIsImEiOiJjazV2MHBodGkwOGY3M2RtZDBoeTl6ZWowIn0.UiL-tTXvmrPfPy3wi3jzDw';","export const drawRoute = (map, coordinates) => {\n\tmap.flyTo({\n\t\tcenter: coordinates[0],\n\t\tzoom: 15\n\t});\n\n\tmap.addLayer({\n\t\tid: \"route\",\n\t\ttype: \"line\",\n\t\tsource: {\n\t\t\ttype: \"geojson\",\n\t\t\tdata: {\n\t\t\t\ttype: \"Feature\",\n\t\t\t\tproperties: {},\n\t\t\t\tgeometry: {\n\t\t\t\t\ttype: \"LineString\",\n\t\t\t\t\tcoordinates\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tlayout: {\n\t\t\t\"line-join\": \"round\",\n\t\t\t\"line-cap\": \"round\"\n\t\t},\n\t\tpaint: {\n\t\t\t\"line-color\": \"#ffc617\",\n\t\t\t\"line-width\": 8\n\t\t}\n\t});\n};","import {createAction} from 'redux-actions';\nimport {\n\tPROFILE_SAVE,\n\tPROFILE_GET,\n\tPROFILE_SUCCESS,\n\tPROFILE_FAILURE,\n} from './types';\n\nexport const fetchProfileRequest = createAction(PROFILE_SAVE);\nexport const fetchProfileGet = createAction(PROFILE_GET);\nexport const fetchProfileSuccess = createAction(PROFILE_SUCCESS);\nexport const fetchProfileFailure = createAction(PROFILE_FAILURE);","export const PROFILE_SAVE = 'PROFILE_REQUEST';\nexport const PROFILE_GET = 'PROFILE_GET';\nexport const PROFILE_SUCCESS = 'PROFILE_SUCCESS';\nexport const PROFILE_FAILURE = 'PROFILE_FAILURE';","import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {fetchProfileRequest} from '../../modules/profile/actions';\nimport {useHistory} from \"react-router-dom\";\nimport {paths} from \"../../constants/Paths\";\nimport {\n\tButton, FormControl, InputLabel\n} from '@material-ui/core';\n\nconst ProfileForm = () => {\n\n\tconst state = useSelector(state => state);\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst {cardNumber, expiryDate, cardName, cvc} = state.profile.data;\n\n\tconst [data, setData] = useState({\n\t\tcardNumber,\n\t\texpiryDate,\n\t\tcardName,\n\t\tcvc,\n\t});\n\n\tuseEffect(() => {\n\t\tsetData(state.profile.data);\n\t}, [state.profile.data]);\n\n\tconst handleSubmit = e => {\n\t\tdispatch(fetchProfileRequest({\n\t\t\tcardNumber: data.cardNumber,\n\t\t\texpiryDate: data.expiryDate,\n\t\t\tcardName: data.cardName,\n\t\t\tcvc: data.cvc,\n\t\t\ttoken: state.auth.token,\n\t\t}));\n\n\t\thistory.push(paths.map);\n\t};\n\n\tconst handleChange = ({target}) => {\n\t\tsetData({\n\t\t\t...data,\n\t\t\t[target.name]: target.value,\n\t\t})\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"bg-container\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"profile__content\">\n\n\t\t\t\t\t\t<form action=\"\" method=\"\" onSubmit={handleSubmit} className=\"form form--profile\">\n\t\t\t\t\t\t\t<h1 className=\"form__title\">Профиль</h1>\n\t\t\t\t\t\t\t<div className=\"form__subtitle\">Способ оплаты</div>\n\n\t\t\t\t\t\t\t<div className=\"form__panels\">\n\t\t\t\t\t\t\t\t<div className=\"form__panel\">\n\t\t\t\t\t\t\t\t\t<div className=\"input__group\">\n\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"cardNumber\">Номер карты*</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"cardNumber\"\n\t\t\t\t\t\t\t\t\t\t\t\t   placeholder=\"Номер карты\"\n\t\t\t\t\t\t\t\t\t\t\t\t   type=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t   name=\"cardNumber\"\n\t\t\t\t\t\t\t\t\t\t\t\t   defaultValue={data.cardNumber}\n\t\t\t\t\t\t\t\t\t\t\t\t   onChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t   required\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"input__group\">\n\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"expiryDate\">Срок действия*</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"expiryDate\"\n\t\t\t\t\t\t\t\t\t\t\t\t   placeholder=\"Срок действия\"\n\t\t\t\t\t\t\t\t\t\t\t\t   type=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t   name=\"expiryDate\"\n\t\t\t\t\t\t\t\t\t\t\t\t   defaultValue={data.expiryDate}\n\t\t\t\t\t\t\t\t\t\t\t\t   onChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t   required\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"form__panel\">\n\t\t\t\t\t\t\t\t\t<div className=\"input__group\">\n\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"cardName\">Имя владельца*</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"cardName\"\n\t\t\t\t\t\t\t\t\t\t\t\t   placeholder=\"Имя владельца\"\n\t\t\t\t\t\t\t\t\t\t\t\t   type=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t   name=\"cardName\"\n\t\t\t\t\t\t\t\t\t\t\t\t   defaultValue={data.cardName}\n\t\t\t\t\t\t\t\t\t\t\t\t   onChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t   required\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"input__group\">\n\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"cvc\">CVC*</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t<input id=\"cvc\"\n\t\t\t\t\t\t\t\t\t\t\t\t   placeholder=\"CVC\"\n\t\t\t\t\t\t\t\t\t\t\t\t   type=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t   name=\"cvc\"\n\t\t\t\t\t\t\t\t\t\t\t\t   defaultValue={data.cvc}\n\t\t\t\t\t\t\t\t\t\t\t\t   onChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t   required\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<Button type=\"submit\" disabled={state.profile.pending} variant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\" className=\"form__btn\">\n\t\t\t\t\t\t\t\tСохранить\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t<div className=\"pending\">\n\t\t\t\t\t\t\t\t{state.profile.pending ? ' Загрузка...' : ''}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</form>\n\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default ProfileForm;","import Profile from './Profile';\nexport default Profile;","import React from 'react';\nimport ProfileForm from './ProfileForm';\nimport Header from \"../Header\";\n\nconst Profile = () => {\n\treturn (\n\t\t<>\n\t\t\t<Header/>\n\t\t\t<ProfileForm/>\n\t\t</>\n\t);\n};\n\nexport default Profile;","import React, {useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {fetchSignupRequest} from '../../modules/auth/actions';\nimport {paths} from '../../constants/Paths';\n\nimport {\n\tButton,\n\tTextField,\n} from '@material-ui/core';\n\nconst SignupForm = () => {\n\n\tconst state = useSelector(state => state.auth);\n\tconst dispatch = useDispatch();\n\n\tconst [data, setData] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t\tname: '',\n\t\tsurname: '',\n\t});\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tdispatch(fetchSignupRequest({\n\t\t\temail: data.email,\n\t\t\tpassword: data.password,\n\t\t\tname: data.name,\n\t\t\tsurname: data.surname,\n\t\t}));\n\t};\n\n\tconst handleChange = ({target}) => {\n\t\tsetData({\n\t\t\t...data,\n\t\t\t[target.name]: target.value,\n\t\t})\n\t};\n\n\n\treturn state.isLoggedIn ? <Redirect to={paths.map}/> : (\n\t\t<>\n\t\t\t<form onSubmit={handleSubmit} className=\"login__form\">\n\t\t\t\t<h1 className=\"form__title\">Регистрация</h1>\n\n\t\t\t\t<div><TextField label=\"Email*\" name='email' type=\"email\" onChange={handleChange} /></div>\n\t\t\t\t<div><TextField label=\"Имя\" name='name' type=\"text\" onChange={handleChange} /></div>\n\t\t\t\t<div><TextField label=\"Фaмилия\" name='surname' type=\"text\" onChange={handleChange} /></div>\n\t\t\t\t<div><TextField label=\"Пароль*\" name='password' type=\"password\" onChange={handleChange}/></div>\n\t\t\t\t<br/>\n\t\t\t\t<div className=\"button__group\">\n\t\t\t\t\t<Button type=\"submit\" disabled={state.pending} variant=\"contained\" color=\"primary\">\n\t\t\t\t\t\tЗарегистрироваться\n\t\t\t\t\t</Button>\n\t\t\t\t\t<div className=\"pending\">\n\t\t\t\t\t\t{state.pending ? ' Загрузка...' : ''}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</>\n\t)\n};\n\nexport default SignupForm;","import Signup from './Signup';\nexport default Signup;","import React from 'react';\nimport AuthWrapper from \"../Shared/AuthWrapper\";\nimport SignupForm from './SignupForm';\n\nconst SignUp = () => {\n\treturn (\n\t\t<AuthWrapper>\n\t\t\t<SignupForm/>\n\t\t</AuthWrapper>\n\t)\n};\n\nexport default SignUp;","import {\n\tfetchProfileFailure,\n\tfetchProfileRequest,\n\tfetchProfileSuccess,\n\tfetchProfileGet,\n} from \"./actions\";\n\nimport {handleActions} from 'redux-actions';\nimport {combineReducers} from \"redux\";\n\nconst data = handleActions({\n\t[fetchProfileSuccess]: (state, action) => action.payload,\n}, false);\n\nconst pending = handleActions({\n\t[fetchProfileRequest]: () => true,\n\t[fetchProfileGet]: () => true,\n\t[fetchProfileSuccess]: () => false,\n\t[fetchProfileFailure]: () => false,\n}, false);\n\nconst error = handleActions({\n\t[fetchProfileFailure]: (state, action) => action.payload,\n\t[fetchProfileRequest]: () => null,\n}, null);\n\nexport default combineReducers({\n\tdata,\n\tpending,\n\terror,\n});","import {\n\tfetchAddressRequest,\n\tfetchAddressSuccess,\n\tfetchAddressFailure,\n\tfetchRouteRequest,\n\tfetchRouteSuccess,\n\tfetchRouteFailure,\n\tclearOrder,\n} from \"./actions\";\n\nimport {handleActions} from 'redux-actions';\nimport {combineReducers} from \"redux\";\n\nconst addresses = handleActions(\n\t{\n\t\t[fetchAddressSuccess]: (state, action) => action.payload,\n\t},\n\tnull\n);\n\nconst route = handleActions(\n\t{\n\t\t[fetchRouteSuccess]: (state, action) => action.payload,\n\t\t[clearOrder]: (state, action) => action.payload,\n\t},\n\t{\n\t\tstatus: false,\n\t\tcoordinates: null,\n\t}\n);\n\nconst pending = handleActions({\n\t[fetchAddressRequest]: () => true,\n\t[fetchAddressSuccess]: () => false,\n\t[fetchAddressFailure]: () => false,\n\t[fetchRouteRequest]: () => true,\n\t[fetchRouteSuccess]: () => false,\n\t[fetchRouteFailure]: () => false,\n}, false);\n\nconst error = handleActions({\n\t[fetchAddressRequest]: () => true,\n\t[fetchAddressSuccess]: () => false,\n\t[fetchAddressFailure]: () => false,\n\t[fetchRouteRequest]: () => true,\n\t[fetchRouteSuccess]: () => false,\n\t[fetchRouteFailure]: () => false,\n}, null);\n\nexport default combineReducers({\n\taddresses,\n\troute,\n\tpending,\n\terror,\n});","import React, {useEffect} from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\nimport {paths} from './constants/Paths';\n\n// Styles\nimport './scss/App.scss';\n\n// Theme\nimport {ThemeProvider} from '@material-ui/core';\nimport {theme} from 'loft-taxi-mui-theme';\n\n// Components\nimport Login from './components/Login';\nimport Map from './components/Map';\nimport Profile from './components/Profile';\nimport Signup from './components/Signup';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchProfileGet} from \"./modules/profile\";\nimport {fetchAddressRequest} from \"./modules/map\";\n\nconst App = () => {\n\tconst state = useSelector(state => state);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (state.auth.isLoggedIn) {\n\t\t\tdispatch(fetchAddressRequest());\n\t\t\tdispatch(fetchProfileGet({\n\t\t\t\ttoken: state.auth.token,\n\t\t\t}));\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<PrivateRoute exact path={paths.map} component={Map}/>\n\t\t\t\t\t<PrivateRoute exact path={paths.profile} component={Profile}/>\n\t\t\t\t\t<Route path={paths.login} component={Login}/>\n\t\t\t\t\t<Route path={paths.signup} component={Signup}/>\n\t\t\t\t\t<Redirect to={paths.map}/>\n\t\t\t\t</Switch>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t);\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {fork, call, put, take, takeEvery} from \"redux-saga/effects\";\n\nimport {\n\tfetchLoginRequest,\n\tfetchLoginSuccess,\n\tfetchLoginFailure,\n\tfetchSignupRequest,\n\tfetchSignupSuccess,\n\tfetchSignupFailure,\n} from \"./auth/actions\";\n\nimport {\n\tfetchProfileRequest,\n\tfetchProfileSuccess,\n\tfetchProfileFailure,\n\tfetchProfileGet,\n} from \"./profile/actions\";\n\nimport {\n\tfetchAddressRequest,\n\tfetchAddressSuccess,\n\tfetchAddressFailure,\n\tfetchRouteRequest,\n\tfetchRouteSuccess,\n\tfetchRouteFailure,\n} from \"./map/actions\";\n\n// Requests\n\nconst PATH = 'https://loft-taxi.glitch.me';\n\nconst loginRequest = data =>\n\tfetch(`${PATH}/auth`, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify(data),\n\t})\n\t\t.then(response => response.json());\n\nconst signupRequest = data =>\n\tfetch(`${PATH}/register`, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify(data),\n\t})\n\t\t.then(response => response.json());\n\nconst profileRequest = data =>\n\tfetch(`${PATH}/card`, {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify(data),\n\t})\n\t\t.then(response => response.json());\n\nconst profileGet = token =>\n\tfetch(`${PATH}/card?token=${token}`, {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t})\n\t\t.then(response => response.json());\n\nconst addressListGet = () =>\n\tfetch(`${PATH}/addressList`)\n\t\t.then(response => response.json());\n\nconst routeRequest = data =>\n\tfetch(`${PATH}/route?address1=${data.addressOne}&address2=${data.addressTwo}`)\n\t\t.then(response => response.json());\n\n// Sagas\n\nfunction* loginSaga() {\n\twhile (true) {\n\t\tconst action = yield take(fetchLoginRequest);\n\t\ttry {\n\t\t\tconst result = yield call(loginRequest, action.payload);\n\t\t\tresult.success\n\t\t\t\t? yield put(fetchLoginSuccess(result))\n\t\t\t\t: yield put(fetchLoginFailure(result));\n\t\t} catch (e) {\n\t\t\tyield put(fetchLoginFailure(e));\n\t\t}\n\t}\n}\n\nfunction* signupSaga() {\n\twhile (true) {\n\t\tconst action = yield take(fetchSignupRequest);\n\t\ttry {\n\t\t\tconst result = yield call(signupRequest, action.payload);\n\t\t\tresult.success\n\t\t\t\t? yield put(fetchSignupSuccess(result))\n\t\t\t\t: yield put(fetchSignupFailure(result));\n\t\t} catch (e) {\n\t\t\tyield put(fetchSignupFailure(e));\n\t\t}\n\t}\n}\n\nfunction* profileRequestSaga() {\n\twhile (true) {\n\t\tconst action = yield take(fetchProfileRequest);\n\t\ttry {\n\t\t\tconst result = yield call(profileRequest, action.payload);\n\t\t\tresult.success\n\t\t\t\t? yield put(fetchProfileSuccess(Object.assign(result, action.payload)))\n\t\t\t\t: yield put(fetchProfileFailure(result));\n\t\t} catch (e) {\n\t\t\tyield put(fetchProfileFailure(e));\n\t\t}\n\t}\n}\n\nfunction* profileGetSaga() {\n\twhile (true) {\n\t\tconst action = yield take(fetchProfileGet);\n\t\ttry {\n\t\t\tconst result = yield call(profileGet, action.payload.token);\n\t\t\tresult\n\t\t\t\t? yield put(fetchProfileSuccess(result))\n\t\t\t\t: yield put(fetchProfileFailure(result));\n\t\t} catch (e) {\n\t\t\tyield put(fetchProfileFailure(e));\n\t\t}\n\t}\n}\n\nfunction* addressesGetSaga() {\n\tyield takeEvery(fetchAddressRequest, function* () {\n\t\ttry {\n\t\t\tconst result = yield call(addressListGet);\n\t\t\tyield put(fetchAddressSuccess(result));\n\t\t} catch (e) {\n\t\t\tyield put(fetchAddressFailure(e));\n\t\t}\n\t});\n}\n\nfunction* routeRequestSaga() {\n\twhile (true) {\n\t\tconst action = yield take(fetchRouteRequest);\n\t\ttry {\n\t\t\tconst result = yield call(routeRequest, action.payload);\n\t\t\tyield put(fetchRouteSuccess({status: true, coordinates: result}));\n\t\t} catch (e) {\n\t\t\tyield put(fetchRouteFailure(e));\n\t\t}\n\t}\n}\n\nexport function* rootSagas() {\n\tyield fork(signupSaga);\n\tyield fork(loginSaga);\n\tyield fork(profileRequestSaga);\n\tyield fork(profileGetSaga);\n\tyield fork(addressesGetSaga);\n\tyield fork(routeRequestSaga);\n}","import {\n\tfetchLoginFailure,\n\tfetchLoginRequest,\n\tfetchLoginSuccess,\n\tlogoutAction,\n\n\tfetchSignupRequest,\n\tfetchSignupSuccess,\n\tfetchSignupFailure,\n} from \"./actions\";\n\nimport {handleActions} from 'redux-actions';\nimport {combineReducers} from \"redux\";\n\nconst isLoggedIn = handleActions({\n\t[fetchLoginSuccess]: (state, action) => action.payload.success,\n\t[logoutAction]: () => false,\n\n\t[fetchSignupSuccess]: (state, action) => action.payload.success,\n}, false);\n\nconst token = handleActions({\n\t[fetchLoginSuccess]: (state, action) => action.payload.token,\n\t[logoutAction]: () => '',\n\n\t[fetchSignupSuccess]: (state, action) => action.payload.token,\n}, '');\n\nconst pending = handleActions({\n\t[fetchLoginRequest]: () => true,\n\t[fetchLoginSuccess]: () => false,\n\t[fetchLoginFailure]: () => false,\n\n\t[fetchSignupRequest]: () => true,\n\t[fetchSignupSuccess]: () => false,\n\t[fetchSignupFailure]: () => false,\n}, false);\n\nconst error = handleActions({\n\t[fetchLoginFailure]: (state, action) => action.payload,\n\t[fetchLoginRequest]: () => null,\n\n\t[fetchSignupFailure]: (state, action) => action.payload,\n\t[fetchSignupRequest]: () => null,\n}, null);\n\nexport default combineReducers({\n\tisLoggedIn,\n\tpending,\n\terror,\n\ttoken,\n});\n","import {combineReducers} from 'redux';\nimport auth from './auth';\nimport profile from './profile';\nimport map from './map';\n\nexport default combineReducers({\n\tauth,\n\tprofile,\n\tmap,\n});\n","let storage = localStorage;\n\nexport const saveStorage = state => {\n    const toStorage = {auth: {isLoggedIn: state.auth.isLoggedIn, token: state.auth.token}};\n    const savedState = JSON.stringify(toStorage);\n    storage.setItem('loftTaxiAuth', savedState);\n};\n\nexport const getStateFromStorage = () => {\n    const savedState = storage.getItem('loftTaxiAuth');\n    if (savedState) {\n        return JSON.parse(savedState);\n    } else {\n        return undefined;\n    }\n};","import {createStore, compose, applyMiddleware} from 'redux';\n\nimport createSagaMiddleWare from 'redux-saga';\nimport {rootSagas} from './modules/sagas';\nimport rootReducer from './modules';\n\nimport {getStateFromStorage} from \"./LocalStorage\";\n\nconst sagaMiddleware = createSagaMiddleWare();\nconst initialState = getStateFromStorage();\n\nconst createAppStore = () => {\n\tconst store = createStore(\n\t\trootReducer,\n\t\tinitialState,\n\t\tcompose(\n\t\t\tapplyMiddleware(sagaMiddleware),\n\t\t\twindow.__REDUX_DEVTOOLS_EXTENSION__\n\t\t\t\t? window.__REDUX_DEVTOOLS_EXTENSION__()\n\t\t\t\t: noop => noop,\n\t\t),\n\t);\n\n\tsagaMiddleware.run(rootSagas);\n\n\treturn store;\n};\n\nexport default createAppStore;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport createStore from './store';\nimport {saveStorage} from \"./LocalStorage\";\n\nconst store = createStore();\n\nstore.subscribe(() => {\n\t\tsaveStorage(store.getState())\n\t}\n);\n\nrender(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App/>\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}